# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '61d234ea-d5ad-4c35-b534-ac9c5c48fc2c'
  imageRepository: 'sample'
  containerRegistry: 'kubernetedcontainer.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'kubernetedcontainer1265936e-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'manifest'
        publishLocation: 'pipeline'
- stage: deploy
  displayName: deploy to dev
  dependsOn: Build
  variables:
    acrsecret: k8sadhana
  jobs:
  - job: Deploy
    displayName: DeploytoAKS
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifest'
        targetPath: '$(Pipeline.Workspace)/manifest' 
    - task: KubernetesManifest@0
      displayName: Create imagePullSecret
      inputs:
        action: createSecret
        secretName: $(imagePullSecret)
        dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
    
    - task: KubernetesManifest@1
      inputs:
        action: 'deploy'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'kubernetesserviceconnection'
        namespace: 'default'
        manifests: 
          $(Pipeline.Workspace)/manifest/deployment.yml
          $(Pipeline.Workspace)/manifest/service.yml