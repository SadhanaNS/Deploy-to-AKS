# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '37e4c2f0-f4b2-4b98-a859-0f1b1e7c4881'
  imageRepository: 'sample'
  containerRegistry: 'kubernetedcontainer.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/app/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'kubernetedcontainer1265936e-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/kubernetes'
        artifact: 'menifests'
        publishLocation: 'pipeline'
        
- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
    acrsecret: k8sexamplesacrauth
    acrdevurl: 'kubernetedcontainer.azurecr.io'
  jobs:
  - job: Deploy
    displayName: Deploy to AKS  
    pool: 
      vmImage: ubuntu-latest
    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'menifests'
        downloadPath: '$(Pipeline.Workspace)/menifests'
    - task: KubernetesManifest@1
      displayName: create secret
      inputs:
        action: 'createSecret'
        connectionType: 'azureResourceManager'
        azureSubscriptionConnection: 'Pay-As-You-Go(1)(63624c86-fe10-49d1-b0c7-b5b0be84da6a)'
        azureResourceGroup: 'adi-p12'
        kubernetesCluster: 'Kube-p2'
        namespace: 'default'
        secretType: 'dockerRegistry'
        secretName: $(imagePullSecret)
        dockerRegistryEndpoint: 'dockerserviceconnection'

    - task: KubernetesManifest@1
      displayName: deploy to kuberntes cluster
      inputs:
        action: 'deploy'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'kubernetesserviceconnection'
        namespace: 'default'
        manifests: |
          $(Pipeline.Workspace)/menifests/deployment.yml
          $(Pipeline.Workspace)/menifests/service.yml
        imagePullSecrets: |
          $(imagePullSecret)
        containers: |
          $(containerRegistry)/$(imageRepository):$(tag)
    
